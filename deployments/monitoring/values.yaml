influxdb2:
  # -- InfluxDB2 admin user; uses admin-password/admin-token keys from
  # secret.
  adminUser:
    organization: "square"
    bucket: "monitoring"
    retention_policy: "30d"
    existingSecret: monitoring
  # -- InfluxDB2 ingress configuration.
  ingress:
    # @default -- False
    # This is a lie.  We define our own ingress template that knows how
    # to route to both influxdb2 and chronograf, and use it.
    enabled: false

chronograf:
  ## Image Settings
  ##
  image:
    tag: 1.9.4
    pullPolicy: IfNotPresent

  ## Specify a service type
  ## ClusterIP is default
  ## ref: http://kubernetes.io/docs/user-guide/services/
  ##
  service:
    replicas: 1
    type: ClusterIP

  ## Persist data to a persistent volume
  ##
  persistence:
    enabled: true
    ## chronograf data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    size: 20Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 1024Mi
      cpu: 1
    limits:
      memory: 32Gi
      cpu: 4

  ## Configure the ingress object to hook into existing infastructure
  ## ref : http://kubernetes.io/docs/user-guide/ingress/
  ## OPTIONALLY you can set .Values.ingress.secretName to set which secret to use
  ##
  ingress:
    ## see influxdb2 ingress
    enabled: false

  oauth:
    ## This is a lie: see below.
    enabled: false
  ## OAuth Settings for OAuth Providers
  ## We do not set these here.  What we do is set:
  ##  - TOKEN_SECRET
  ##  - GH_CLIENT_ID
  ##  - GH_CLIENT_SECRET
  ##  - GH_ORGS
  ## in the environment.  The secrets should come from the "monitoring"
  ## secret, which is a VaultSecret, and the rest can just be injected
  ## into the deployment env directly.

  ## Extra environment variables that will be passed onto deployment pods
  env:
    BASE_PATH: /chronograf
    CUSTOM_AUTO_REFRESH: "1s=1000"
    GH_CLIENT_ID: "a12e66e2a1d213b2bb17"
    GH_ORGS: "lsst-sqre"
    HOST_PAGE_DISABLED: true
    INFLUXDB_URL: "https://monitoring.lsst.codes"
    INFLUXDB_ORG: "square"
  ## INFLUXDB_TOKEN should be in the monitoring secret as well as
  ## TOKEN_SECRET and GH_CLIENT_SECRET.  Note that INFLUX_TOKEN is for
  ## InfluxDBv1 and INFLUXDB_TOKEN is for v2.
  envFromSecret: monitoring
  updateStrategy:
    type: Recreate

cronjob:
  # -- image for bucket-mapping cronjob
  image:
    # -- repository for bucket-mapper
    repository: ghcr.io/lsst-sqre/influx-bucket-mapper
    # -- tag for bucket-mapper
    tag: 0.1.2
