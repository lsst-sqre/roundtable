opendistro-es:
  elasticsearch:
    master:
      replicas: 3
      storageClassName: standard
    data:
      replicas: 3
      javaOpts: "-Xms1g -Xmx1g"
      resources:
        limits:
          memory: 2G
        requests:
          memory: 2G
      storageClassName: standard
    client:
      replicas: 2
      javaOpts: "-Xms1g -Xmx1g"
      resources:
        limits:
          memory: 2G
        requests:
          memory: 2G
      ingress:
        enabled: false

  kibana:
    ingress:
      enabled: false

fluentd-elasticsearch:
  elasticsearch:
    host: logging-opendistro-es-client-service
    scheme: https
    sslVerify: false
    auth:
      enabled: true
      user: admin
      password: admin
    configMaps:
      useDefaults:
        containersInputConf: false
    extraConfigMaps:
      kubernetes.input.conf: |-
        <source>
          @id fluentd-containers.log
          @type tail
          path /var/log/containers/*.log
          pos_file /var/log/containers.log.pos
          tag raw.kubernetes.*
          read_from_head true
          <parse>
            @type multi_format
            <pattern>
              format json
              time_key time
              time_format %Y-%m-%dT%H:%M:%S.%NZ
            </pattern>
            <pattern>
              format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
              time_format %Y-%m-%dT%H:%M:%S.%N%:z
            </pattern>
          </parse>
        </source>
        # Detect exceptions in the log output and forward them as one log entry.
        <match raw.kubernetes.**>
          @id raw.kubernetes
          @type detect_exceptions
          remove_tag_prefix raw
          message log
          stream stream
          multiline_flush_interval 5
          max_bytes 500000
          max_lines 1000
        </match>
        # Concatenate multi-line logs
        #<filter **>
        <filter kubernetes.**>
          @id filter_concat
          @type concat
          key message
          multiline_end_regexp /\n$/
          separator ""
        </filter>
        # Enriches records with Kubernetes metadata
        <filter kubernetes.**>
          @id filter_kubernetes_metadata
          @type kubernetes_metadata
        </filter>
        # Fixes json fields in Elasticsearch
        <filter kubernetes.**>
          @id filter_parser
          @type parser
          key_name log
          reserve_data true
          remove_key_name_field true
          <parse>
            @type multi_format
            <pattern>
              format json
            </pattern>
            <pattern>
              format none
            </pattern>
          </parse>
        </filter>
