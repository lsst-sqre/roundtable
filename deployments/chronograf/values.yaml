## Image Settings
##
image:
  tag: 1.9.4
  pullPolicy: IfNotPresent

## Specify a service type
## ClusterIP is default
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  replicas: 1
  type: ClusterIP

## Persist data to a persistent volume
##
persistence:
  enabled: true
  ## chronograf data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  size: 20Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 1024Mi
    cpu: 1
  limits:
    memory: 32Gi
    cpu: 4

## Configure the ingress object to hook into existing infastructure
## ref : http://kubernetes.io/docs/user-guide/ingress/
## OPTIONALLY you can set .Values.ingress.secretName to set which secret to use
##
ingress:
  enabled: true
  tls: true
  hostname: monitoring.lsst.codes
  annotations:
    kubernetes.io/ingress.class: "nginx"
  path: /chronograf(/|$)

## OAuth Settings for OAuth Providers
oauth:
  # Need to set to true to use any of the oauth options
  enabled: true
  ## Assumes that a kubernetes secret named chronograf-oauth
  ## exists and contains the required secrets to configure the
  ## GH OAuth Provider: token_secret, gh_client_id,
  ## gh_client_secret and gh_orgs.
  existingSecret: chronograf-oauth
  github:
    enabled: true

## Extra environment variables that will be passed onto deployment pods
env:
  HOST_PAGE_DISABLED: true
  BASE_PATH: /chronograf
  CUSTOM_AUTO_REFRESH: "1s=1000"
  INFLUXDB_URL: "https://monitoring.lsst.codes"
  INFLUXDB_ORG: "square"
  # STATUS_FEED_URL:
  # "https://lsst-sqre.github.io/argocd-efd/apps/chronograf/feeds/tucson-teststand.json" ??
# INFLUX_TOKEN should be in the chronograf secret
# This is separate from the oauth secret because we don't want all those
# keys/values mounted into the deployment environment
envFromSecret: chronograf
updateStrategy:
  type: Recreate
